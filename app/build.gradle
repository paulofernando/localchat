apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "site.paulo.localchat"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        //checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
        warning 'InvalidPackage'
    }

    /*signingConfigs {
        // You must set up an environment var before release signing
        // Run: export APP_KEY={password}
        // TODO Add your release keystore in /keystore folder
        release {
            storeFile file('keystore/release.jks')
            keyAlias 'LocalchatKey'
            storePassword "$System.env.APP_KEY"
            keyPassword "$System.env.APP_KEY"
        }

        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }*/

    buildTypes {
        release {
            //signingConfig signingConfigs.release
            //debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            versionNameSuffix " Debug"
            debuggable true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'

        // Common Test Dir
        def commonTestDir = 'src/commonTest/kotlin'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }

    /*testOptions {
        unitTests.returnDefaultValues = true
    }*/

}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'https://jitpack.io' }
}

dependencies {
    def daggerCompiler = "com.google.dagger:dagger-compiler:2.25.2"
    def jUnit = "junit:junit:4.12"

    // App Dependencies
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.61"
    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation ('androidx.exifinterface:exifinterface:1.1.0') {
        force = true
    }
    implementation 'androidx.core:core:1.1.0'
    implementation "com.google.dagger:dagger:2.25.3"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation "com.jakewharton:butterknife:10.2.0"
    implementation "com.squareup.retrofit2:retrofit:2.7.0"
    implementation "com.squareup.retrofit2:converter-gson:2.7.0"
    implementation "com.squareup.retrofit2:adapter-rxjava:2.7.0"
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.3.8'
    implementation 'io.reactivex:rxkotlin:0.60.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.squareup.sqlbrite:sqlbrite:1.1.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
    implementation 'com.github.markushi:circlebutton:1.1'
    implementation 'com.anupcowkur:reservoir:3.1.0'
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.google.firebase:firebase-database:19.2.0'
    implementation 'com.google.firebase:firebase-auth:19.2.0'
    implementation 'com.google.firebase:firebase-storage:19.1.0'
    implementation 'com.kelvinapps:rxfirebase:0.0.15'
    testImplementation 'org.robolectric:robolectric:4.3.1'

    kapt 'com.google.dagger:dagger-compiler:2.25.3'
    kapt "com.jakewharton:butterknife-compiler:10.2.0"

    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    implementation files('lib/geohash-1.3.0.jar')

    // Unit tests dependencies
    testImplementation jUnit
    testImplementation "io.mockk:mockk:1.9.3"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.0'

    testImplementation "org.hamcrest:hamcrest-core:2.2"
    testImplementation "org.hamcrest:hamcrest-library:2.2"
    testImplementation "org.hamcrest:hamcrest-integration:1.3"

    // Instrumentation test dependencies
    //androidTestImplementation jUnit
    //androidTestImplementation 'org.mockito:mockito-core:3.2.4'
    //androidTestImplementation mockitoKotlin
    /*androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })*/
}

androidExtensions {
    experimental = true
}

// Log out test results to console
tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

apply plugin: 'com.google.gms.google-services'